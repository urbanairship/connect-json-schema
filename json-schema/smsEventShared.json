{
  "properties": {
    "device": {
      "description": "Holds information about an SMS \"device\" (an individual SMS channel).",
      "properties": {
        "channel": {
          "description": "The unique, platform-agnostic channel identifier for a device.",
          "type": "string",
          "x-inline-component": true
        },
        "delivery_address": {
          "description": "The phone number for the channel.",
          "format": "msisdn",
          "type": "string"
        },
        "device_type": {
          "description": "SMS compliance events list the SMS device type.",
          "enum": [
            "SMS"
          ],
          "type": "string"
        },
        "identifiers": {
          "description": "If present, the `identifiers` object holds the value for the `sender` property.",
          "properties": {
            "sender": {
              "description": "The sender that the `delivery_address` received a message from.",
              "type": "string"
            }
          },
          "required": [
            "sender"
          ],
          "type": "object"
        }
      },
      "required": [
        "device_type"
      ],
      "title": "SMS Device",
      "type": "object",
      "x-inline-component": true
    },
    "id": {
      "description": "Uniquely identifies an event. The data stream will occasionally send duplicate events. Duplicate events will have the same `id`, `type`, `occurred`, `device`, and `body` values but different `offset` and `processed` values. You should use the `id` to deduplicate.",
      "type": "string",
      "x-inline-component": true
    },
    "occurred": {
      "description": "When the event occurred.",
      "type": "string",
      "x-inline-component": true
    },
    "offset": {
      "description": "An identifier of a location in the stream; used to resume the stream after severing a connection. If you open a stream using the offset value, the stream will resume with the next element in the stream. You should store this value as a string so that you can easily resume the stream if it ends for any reason.",
      "type": "string",
      "x-inline-component": true
    },
    "processed": {
      "description": "When the event was ingested by Airship. There may be some latency between when the event occurred, and when it was processed.",
      "type": "string",
      "x-inline-component": true
    },
    "type": {
      "description": "Compliance events are the only types of events returned by this event stream.\n",
      "enum": [
        "COMPLIANCE"
      ],
      "type": "string"
    }
  },
  "type": "object",
  "x-inline-component": true
}
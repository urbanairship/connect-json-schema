{
  "title": "Schema describing the close event",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "A unique UUID assocaited with each event used for deduplication."
    },
    "offset": {
      "type": "string",
      "description": "This field is only used when directly consuming from the connect api to indicate the offset for resuming.  Connect integrations will always have this value set to 0."
    },
    "occurred": {
      "type": "string",
      "description": "The time the event occured as an iso8601 UTC timestamp."
    },
    "processed": {
      "type": "string",
      "description": "The time the event was processed as an iso8601 UTC timestamp."
    },
    "device": {
      "type": "object",
      "description": "An object describing attributes of the device.  Only one channel association will be given.",
      "properties": {
        "ios_channel": {
          "type": "string",
          "description": "The IOS channel the device is associated with."
        },
        "android_channel": {
            "type": "string",
            "description": "The Android channel the device is assocaited with."
        },
        "amazon_channel": {
            "type": "string",
            "description": "The Amazon channel the device is assocaited with."
        },
        "named_user_id": {
            "type": "string",
            "description": "The named user assocaited with the device."
        },
        "attributes": {
          "type": "object",
          "properties": {
            "locale_variant": {
              "type": "string"
            },
            "app_version": {
              "type": "string",
              "description": "Indicates the version of the application"
            },
            "device_model": {
              "type": "string",
              "description": "Indicates the device model"
            },
            "connection_type": {
              "type": "string",
              "description": "Indicates if the connection is WIFI or 3g etc.."
            },
            "app_package_name": {
              "type": "string",
              "description": "Indicates the applications package name"
            },
            "iana_timezone": {
              "type": "string",
              "description": "Indicates the IANA timezone"
            },
            "push_opt_in": {
              "type": "string",
              "description": "Indicates if the device is opted in for push"
            },
            "locale_country_code": {
              "type": "string",
              "description": "Indicates the countries locale country code"
            },
            "device_os": {
              "type": "string",
              "description": "Indicates the devices operating system of IOS or android and possibly version"
            },
            "locale_timezone": {
              "type": "string",
              "description": "Indicates the timezone for the device"
            },
            "carrier": {
              "type": "string",
              "description": "Indicates the carrier on which the device is active"
            },
            "locale_language_code": {
              "type": "string",
              "description": "Indicates the locale language code for the device"
            },
            "location_enabled": {
              "type": "string",
              "description": "Indicates if the device has location tracking enabled"
            },
            "background_push_enabled": {
              "type": "string",
              "description": "Indicates if the device has background push enabled"
            },
            "ua_sdk_version": {
              "type": "string",
              "description": "Indicates what version of the ua sdk is in use"
            },
            "location_permission": {
              "type": "string",
              "description": "Indicates if the device has permission to use the location information for enhancing user experience"
            }
          }
        }
      }
    },
    "body": {
      "type": "object",
      "properties": {
        "session_id": {
          "type": "string",
          "description": "Specifies the session the event was associated with"
        },
        "name": {
          "type": "string",
          "description": "The name of the user defined event"
        },
        "value": {
          "type": "number",
          "description": "The value of units associated with the custom event. May be absent.  This value may not be representable as a 64-bit floating-point number."
        },
        "transaction": {
          "type": "string",
          "description": "A string set by the customer to wrap a sequence of interactions. May be absent."
        },
        "customer_id": {
          "type": "string",
          "description": "Customer-side id, such as an email address. May be absent."
        },
        "interaction_id": {
          "type": "string",
          "description": "An Urban Airship identifier uniquely identifying the interaction. May be absent."
        },
        "interaction_type": {
          "type": "string",
          "description": "The type of interaction.  If not supplied by the customer it is one of several options. 'ua_mcrap' indicates it was triggered by the Urban Airship Message Center. 'ua_landing_page' indicates it was triggered from a landing page. 'ua_interactive_notification' indicates it was triggered from an interactive notification"
        },
        "properties": {
          "type": "object",
          "description": "Customer defined freeform json attributes to be associated with the custom event"
        },
        "last_delivered": {
          "type": "object",
          "description": "Details about the last push delivered in the last 40 days which did not trigger a direct open",
          "properties": {
            "push_id": {
              "type": "string",
              "description": "The push id of the last delivered push"
            },
            "time": {
              "type": "string",
              "description": "iso8601 timestamp indicating when the last_delieverd push was recieved"
            },
            "group_id": {
              "type": "string",
              "description": "The push's group_id if it is a part of an automation event pipeline"
            },
            "variant": {
              "type": "string",
              "description": "The variant id if the push is a part of an a/b experiment"
            },
            "experiment_id": {
              "type": "string",
              "description": "The experiemnt id which a possible experiment push is associated with"
            }
          },
          "required": ["push_id", "time"]
        },
        "triggering_push": {
          "type": "object",
          "description": "If the open was a direct open caused by a push this is the meta data describing that push",
          "properties": {
            "push_id": {
              "type": "string",
              "description": "The push id of the triggering push"
            },
            "time": {
              "type": "string",
              "description": "iso8601 timestamp indicating when the triggering push was recieved"
            },
            "group_id": {
              "type": "string",
              "description": "The push's group_id if it is a part of an automation event pipeline"
            },
            "variant": {
              "type": "string",
              "description": "The variant id if the push is a part of an a/b experiment"
            },
            "experiment_id": {
              "type": "string",
              "description": "The experiemnt id which a possible experiment push is associated with"
            }
          },
          "required": ["push_id", "time"]
        }
      },
      "required": ["session_id"]
    },
    "type": {
      "type": "string",
      "description": "The type of event that occured"
    }
  },
  "required": [
    "id",
    "offset",
    "occurred",
    "processed",
    "device",
    "body",
    "type"
  ]
}
